# This is a basic workflow to help you get started with Actions

name: Deploy PROD Widget

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:

jobs:
  test_widget:
    uses: ./.github/workflows/reusable-widget-e2e.yml
    with:
      submodules: true
      submodule_branch: "main"
    secrets: inherit

  deploy_widget_eu:
    needs: test_widget
    runs-on: ubuntu-latest
    timeout-minutes: 80
    environment: Production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-project

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:widget

      - name: Create env file
        working-directory: apps/widget
        run: |
          touch .env
          echo REACT_APP_API_URL="https://eu.api.novu.co" >> .env
          echo REACT_APP_SENTRY_DSN="https://02189965b1bb4cf8bb4776f417f80b92@o1161119.ingest.sentry.io/625116" >> .env
          echo REACT_APP_WS_URL="https://eu.ws.novu.co" >> .env
          echo REACT_APP_ENVIRONMENT=production >> .env

      - name: Envsetup
        working-directory: apps/widget
        run: npm run envsetup

      - name: Build PROD
        env:
          REACT_APP_API_URL: https://eu.api.novu.co
          REACT_APP_SENTRY_DSN: https://02189965b1bb4cf8bb4776f417f80b92@o1161119.ingest.sentry.io/625116
          REACT_APP_WS_URL: https://eu.ws.novu.co
          REACT_APP_ENVIRONMENT: production
        working-directory: apps/widget
        run: npm run build

      - name: Deploy WIDGET to PROD
        uses: scopsy/actions-netlify@develop
        with:
          publish-dir: apps/widget/build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: prod
          production-deploy: true
          alias: prod
          github-deployment-environment: Production
          github-deployment-description: Web Deployment
          netlify-config-path: apps/widget/netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 20a64bdd-1934-4284-875f-862410c69a3b
        timeout-minutes: 1

  # This workflow contains a single job called "build"
  deploy_widget_us:
    needs:
      - test_widget
      - deploy_widget_eu
    runs-on: ubuntu-latest
    timeout-minutes: 80
    environment: Production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-project

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:widget

      - name: Create env file
        working-directory: apps/widget
        run: |
          touch .env
          echo REACT_APP_API_URL="https://api.novu.co" >> .env
          echo REACT_APP_SENTRY_DSN="https://02189965b1bb4cf8bb4776f417f80b92@o1161119.ingest.sentry.io/625116" >> .env
          echo REACT_APP_WS_URL="https://ws.novu.co" >> .env
          echo REACT_APP_ENVIRONMENT=production >> .env

      - name: Envsetup
        working-directory: apps/widget
        run: npm run envsetup

      - name: Build PROD
        env:
          REACT_APP_API_URL: https://api.novu.co
          REACT_APP_SENTRY_DSN: https://02189965b1bb4cf8bb4776f417f80b92@o1161119.ingest.sentry.io/625116
          REACT_APP_WS_URL: https://ws.novu.co
          REACT_APP_ENVIRONMENT: production
        working-directory: apps/widget
        run: npm run build

      - name: Deploy WIDGET to PROD
        uses: scopsy/actions-netlify@develop
        with:
          publish-dir: apps/widget/build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: prod
          production-deploy: true
          alias: prod
          github-deployment-environment: Production
          github-deployment-description: Web Deployment
          netlify-config-path: apps/widget/netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: 6f927fd4-dcb0-4cf3-8c0b-8c5539d0d034
        timeout-minutes: 1

  deploy_docker:
    needs:
      - deploy_widget_us
      - deploy_widget_eu
    runs-on: ubuntu-latest
    timeout-minutes: 80
    environment: Production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-project

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:widget

      - name: Build, tag, and push image to ghcr.io
        id: build-image
        env:
          REGISTRY_OWNER: novuhq
          DOCKER_NAME: novu/widget
          IMAGE_TAG: ${{ github.sha }}
          GH_ACTOR: ${{ github.actor }}
          GH_PASSWORD: ${{ secrets.GH_PACKAGES }}
        run: |
          echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin 
          docker build -t ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG -f apps/widget/Dockerfile .
          docker tag ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:prod
          docker tag ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:latest
          docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:prod
          docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:latest
          docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
          echo "IMAGE=ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT
