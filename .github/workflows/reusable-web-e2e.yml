# This is a basic workflow to help you get started with Actions

name: Test WEB

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  workflow_call:
    inputs:
      submodules:
        description: 'The flag controlling whether we want submodules to checkout'
        required: false
        default: false
        type: boolean

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  e2e_web:
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3, 4, 5, 6, 7]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 80

    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - id: setup
        run: |
          if ! [[ -z "${{ secrets.SUBMODULES_TOKEN }}" ]]; then
            echo ::set-output has_token=true
          else
            echo ::set-output has_token=false
          fi
      # checkout with submodules if token is provided
      - uses: actions/checkout@v3
        if: steps.setup.outputs.has_token == 'true'
        with:
          submodules: ${{ inputs.submodules }}
          token: ${{ secrets.SUBMODULES_TOKEN }}
       # checkout without submodules
      - uses: actions/checkout@v3
        if: steps.setup.outputs.has_token != 'true'
      - uses: ./.github/actions/setup-project
        id: setup-project
        with:
          cypress: true

      - uses: mansagroup/nrwl-nx-action@v3
        with:
          targets: lint,build
          projects: '@novu/web,@novu/api,@novu/worker'

      - uses: ./.github/actions/start-localstack

      - name: Start Client
        working-directory: apps/web
        env:
          REACT_APP_API_URL: http://localhost:1336
          REACT_APP_WS_URL: http://localhost:1340
          REACT_APP_WEBHOOK_URL: http://localhost:1341
          REACT_APP_LAUNCH_DARKLY_CLIENT_SIDE_ID: ${{ secrets.TEST_LAUNCH_DARKLY_CLIENT_SIDE_ID }}
        run: pnpm start:static:build &

      - name: Start WS
        env:
          IN_MEMORY_CLUSTER_MODE_ENABLED: false
        run: |
          cd apps/ws && pnpm start:test &

      - name: Start API in TEST
        env:
          GITHUB_OAUTH_CLIENT_ID: ${{ secrets.CYPRESS_GITHUB_OAUTH_CLIENT_ID }}
          GITHUB_OAUTH_CLIENT_SECRET: ${{ secrets.CYPRESS_GITHUB_OAUTH_CLIENT_SECRET }}
          NODE_ENV: "test"
          PORT: "1336"
          TZ: "UTC"
          GITHUB_OAUTH_REDIRECT: "http://localhost:1336/v1/auth/github/callback"
        run: cd apps/api && pnpm start:build &

      - name: Start worker
        env:
          NODE_ENV: "test"
          PORT: 1342
          TZ: "UTC"
          IN_MEMORY_CLUSTER_MODE_ENABLED: false
        run: cd apps/worker && pnpm start:prod &

      - name: Install wait-on plugin
        run: npm i -g wait-on

      - name: Wait on Services
        run: wait-on --timeout=180000 http://localhost:1336/v1/health-check http://localhost:1342/v1/health-check http://localhost:1340/v1/health-check http://localhost:4200

      # run cypress install only when cache was not hit
      - name: Cypress install
        if: steps.setup-project.outputs.cypress_cache_hit != 'true'
        working-directory: apps/web
        run: pnpm cypress install

      - uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: "stable"
      - run: |
          echo "BROWSER_PATH=$(which chrome)" >> $GITHUB_ENV

      - name: Cypress run e2e
        uses: cypress-io/github-action@v5
        env:
          NODE_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_WEB_KEY }}
          CYPRESS_GITHUB_USER_EMAIL: ${{ secrets.CYPRESS_GITHUB_USER_EMAIL }}
          CYPRESS_GITHUB_USER_PASSWORD: ${{ secrets.CYPRESS_GITHUB_USER_PASSWORD }}
          CYPRESS_IS_CI: true
        with:
          working-directory: apps/web
          browser: "${{ env.BROWSER_PATH }}"
          record: true
          parallel: true
          install: false
          config-file: cypress.config.ts

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/web/cypress/screenshots

  component_web:
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 80

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup-project
        id: setup-project

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:web

      # run cypress install only when cache was not hit
      - name: Cypress install
        if: steps.setup-project.outputs.cypress_cache_hit != 'true'
        working-directory: apps/web
        run: pnpm cypress install

      - name: Run Component tests ðŸ§ª
        uses: cypress-io/github-action@v5
        env:
          NODE_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_WEB_KEY }}
          NODE_OPTIONS: --max_old_space_size=4096
        with:
          browser: chrome
          working-directory: apps/web
          install: false
          component: true

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/web/cypress/screenshots
